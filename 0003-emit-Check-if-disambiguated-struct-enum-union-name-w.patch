From 843fe9bfab4859b4c718b87dccfb27f45833321f Mon Sep 17 00:00:00 2001
From: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Fri, 23 Sep 2022 14:40:22 -0300
Subject: [PATCH 03/55] emit: Check if disambiguated struct/enum/union name was
 already emitted in a previous CU

When generating from DWARF we may find the same ambiguous
enum/struct/union name ('struct foo' and 'union foo' on the same .c file), in multiple CUs,
so we need to check again when disambiguating by adding a __N suffix.

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 dwarves_emit.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/dwarves_emit.c b/dwarves_emit.c
index 910afb9..304d587 100644
--- a/dwarves_emit.c
+++ b/dwarves_emit.c
@@ -357,6 +357,12 @@ int type__emit_definitions(struct tag *tag, struct cu *cu,
 			} else {
 				// Will be deleted in type__delete() on noticing ctype->suffix_disambiguation != 0
 				tag__namespace(tag)->name = disambiguated_name;
+
+				// Now look again if it was emitted in a previous CU with the disambiguated name
+				if (type_emissions__find_definition(emissions, tag->tag, type__name(ctype)) != NULL) {
+					ctype->definition_emitted = 1;
+					return 0;
+				}
 			}
 
 		}
-- 
2.40.0.rc2

