From e5e24ada4f5578ae921539280e4716a41bfd95cc Mon Sep 17 00:00:00 2001
From: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Mon, 24 Oct 2022 11:25:44 -0300
Subject: [PATCH 26/55] core: Use zalloc() to make the code more robust

Recently we had a problem where it was assumed that a field was
initialized to zeros but the constructor was using malloc(), check
all use and switch cus__new() to zalloc() to prevent such problems.

The other cases are clone() operations, so no sense in zeroing newly
allocated memory since it will be copied from some other similar
struct.

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 dwarves.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/dwarves.c b/dwarves.c
index 95a3bac..b8681bc 100644
--- a/dwarves.c
+++ b/dwarves.c
@@ -2586,12 +2586,9 @@ int cus__fprintf_load_files_err(struct cus *cus __maybe_unused, const char *tool
 
 struct cus *cus__new(void)
 {
-	struct cus *cus = malloc(sizeof(*cus));
+	struct cus *cus = zalloc(sizeof(*cus));
 
 	if (cus != NULL) {
-		cus->nr_entries  = 0;
-		cus->priv	 = NULL;
-		cus->loader_exit = NULL;
 		INIT_LIST_HEAD(&cus->cus);
 		pthread_mutex_init(&cus->mutex, NULL);
 	}
-- 
2.40.0.rc2

