From d85b86ecc1df40761320a177e79556ee9d574e13 Mon Sep 17 00:00:00 2001
From: Arnaldo Carvalho de Melo <acme@redhat.com>
Date: Thu, 13 Oct 2022 15:46:58 -0300
Subject: [PATCH 24/55] emit: Support DW_TAG_atomic_type when emitting
 definitions for a typedef

I.e. now this works:

  typedef unsigned int __uint32_t;
  typedef __uint32_t uint32_t;
  typedef _Atomic uint32_t atomic_uint32_t;

That is, emitting the atomic_uint32_t works as it notices its _Atomic
that points to uint32_t and then fprintfs it and __uint32_t.

Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
---
 dwarves_emit.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/dwarves_emit.c b/dwarves_emit.c
index 102b7c4..01b33b7 100644
--- a/dwarves_emit.c
+++ b/dwarves_emit.c
@@ -161,6 +161,13 @@ static int typedef__emit_definitions(struct tag *tdef, struct cu *cu,
 		goto emit;
 
 	switch (type->tag) {
+	case DW_TAG_atomic_type:
+		type = cu__type(cu, tdef->type);
+		if (type)
+			tag__emit_definitions(type, cu, emissions, fp);
+		else
+			fprintf(stderr, "%s: couldn't find the type pointed from _Atomic for '%s'\n", __func__, type__name(def));
+		break;
 	case DW_TAG_array_type:
 		tag__emit_definitions(type, cu, emissions, fp);
 		break;
-- 
2.40.0.rc2

